<?xml version="1.0"?>
<package>
  <metadata minClientVersion="2.8.6">
    <id>JSNLog.ClassLibrary</id>
    <version>0.0.0</version>
    <title>JSNLog.ClassLibrary - Class library for JSNLog</title>
    <authors>Matt Perdeck</authors>
    <owners>Matt Perdeck</owners>
    <projectUrl>http://jsnlog.com</projectUrl>
    <iconUrl>http://jsnlog.com/Nuget/icon.png</iconUrl>
    <requireLicenseAcceptance>false</requireLicenseAcceptance>
    <description>Equal to JSNLog package, except that this does not modify your web.config, and does not install the JavaScript library and the MVC route for logging requests. For use in class libraries instead of web sites. If in doubt, just use the JSNLog package.</description>
    <copyright>Copyright 2012-2017</copyright>
    <tags>JavaScript logging exceptions ajax log4net nlog elmah serilog</tags>
    <dependencies>
      <group targetFramework=".NETFramework4.5.2">
        <!-- IMPORTANT
				These packages are extremely similar:
				* JSNLog
				* CommonLogging - a copy of JSNLog, except for the id.
				* JSNLog.ClassLibrary.nuspec - does not copy contents files or the readme.txt file, and does not depend on WebActivatorEx. For use in class libraries.

               The CommonLogging NuGet package and the JSNLog package have the same dependencies
               and files. This because CommonLogging is purely a convenience package - JSNLog
               already builds on Common.Logging, so it is not really needed. Only reason it is there
               is so there is no need to explain to Common.Logging users that they can install
               the core JSNLog.

               If you change the dependencies or files in one of these nuspecs, change them
               in the other as well. -->
        <dependency id="Common.Logging" version="3.3.1" />

        <!--
		    The below definition causes NuGet to load version 2.1.0 if no version of
		    Microsoft.Owin has already been installed (it tries to install the LOWEST
		    possible version of a package).

		    This will work fine in a .Net 4.0 project. Note that versions past 2.1.0 no longer support .Net 4.0.
		    If the project already has a higher version of Microsoft.Owin, this definition will accept that too.
		    The assemblyBinding binding section in the section's web.config will translate 2.1.0 (as asked for by
		    JSNLog project in its references) to the version that is actually installed in the project.
        -->
        <dependency id="Microsoft.Owin" version="2.1.0" />

        <!-- Use low minimum version to make installation easier with old code -->
        <dependency id="System.Text.Json" version="4.6.0" />
      </group>
    </dependencies>
  </metadata>
  <files>
    <file src="bin\Release\net452\jsnlog.*"     target="lib\net452\" />
  </files>
</package>
